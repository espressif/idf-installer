name: build-offline-installer

on:
  workflow_call:
    inputs:
      esp_idf_version:
        required: true
        type: string

env:
  IDF_BRANCH: ${{ inputs.esp_idf_version }}
  VERSION: 'offline-${{ inputs.esp_idf_version }}'

jobs:
  build-offline-installer:
    name: Build Installer
    runs-on: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Inno Setup
        shell: pwsh
        run: choco install innosetup inno-download-plugin

      - name: Install Inno Setup Download plugin
        shell: pwsh
        run: |
          $isAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
          Write-Output "Running as Administrator: $isAdmin"
          Write-Output "Downloading Inno Download Plugin..."
          Invoke-WebRequest -Uri https://github.com/espressif/inno-download-plugin/releases/download/v1.5.1/idpsetup-1.5.1.exe -OutFile idpsetup.exe
          Write-Output "Installing Inno Download Plugin..."
          .\idpsetup.exe /SP- /SUPPRESSMSGBOXES
          Write-Output "Installation completed."

      - name: Build Installer
        env:
          CERTIFICATE: ${{ secrets.CERTIFICATE }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        shell: pwsh
        run: .\Build-Installer.ps1 -InstallerType offline -OfflineBranch v${{ env.IDF_BRANCH }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Get installer size and store it to file
        run: |
          echo $(Get-ItemProperty -Path .\build\esp-idf-tools-setup-offline-signed.exe | Select-Object -ExpandProperty Length) > variables.txt
          echo "Instaler size from variable is $(Get-Content variables.txt)"
      - name: Upload artifacts of installer size
        uses: actions/upload-artifact@v4
        with:
          name: installer-size
          path: ./variables.txt

      - name: Upload Release Asset To Github
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/esp-idf-tools-setup-offline-signed.exe
          asset_name: esp-idf-tools-setup-${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset To dl.espressif.com
        id: upload-release-asset-espressif
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        shell: pwsh
        run: aws s3 cp --acl=public-read --no-progress ./build/esp-idf-tools-setup-offline-signed.exe s3://${{ secrets.DL_BUCKET }}/dl/idf-installer/esp-idf-tools-setup-${{ env.VERSION }}.exe
